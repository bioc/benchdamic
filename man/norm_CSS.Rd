% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_CSS.R
\name{norm_CSS}
\alias{norm_CSS}
\title{norm_CSS}
\usage{
norm_CSS(object, method = "default")
}
\arguments{
\item{object}{phyloseq object containing the counts to be normalized.}

\item{method}{Normalization scaling parameter (default
\code{method = "default"}). If \code{"median"}, the median of the
normalization factors is used as scaling (Paulson et al. 2013).}
}
\value{
A new column containing the CSS scaling factors is added to the
phyloseq \code{sample_data} slot.
}
\description{
Calculate scaling factors from a phyloseq object to scale the raw library
sizes. Inherited from metagenomeSeq `calcNormFactors` function which performs
the Cumulative Sum Scaling normalization.
}
\examples{
set.seed(1)
# Create a very simple phyloseq object
counts <- matrix(rnbinom(n = 60, size = 3, prob = 0.5), nrow = 10, ncol = 6)
metadata <- data.frame("Sample" = c("S1", "S2", "S3", "S4", "S5", "S6"),
                       "group" = as.factor(c("A", "A", "A", "B", "B", "B")))
ps <- phyloseq::phyloseq(phyloseq::otu_table(counts, taxa_are_rows = TRUE),
                         phyloseq::sample_data(metadata))

# Calculate the scaling factors
ps_NF <- norm_CSS(object = ps, method = "median")
# The phyloseq object now contains the scaling factors:
scaleFacts <- phyloseq::sample_data(ps_NF)[, "NF.CSSmedian"]
head(scaleFacts)

# VERY IMPORTANT: to convert scaling factors to normalization factors
# multiply them by the library sizes and renormalize.
normFacts = scaleFacts * phyloseq::sample_sums(ps_stool_16S)
# Renormalize: multiply to 1
normFacts = normFacts/exp(colMeans(log(normFacts)))
}
\seealso{
\code{\link[metagenomeSeq]{calcNormFactors}} for details.
\code{\link{setNormalizations}} and \code{\link{runNormalizations}} to fastly
set and run normalizations.
}
